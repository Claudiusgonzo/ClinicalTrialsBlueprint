{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "accountId": {
            "type": "string"
        },
        "serviceName": {
            "type": "String"
        },
        "isLiveId": {
            "type": "bool",
            "defaultValue": false
        },
        "connections_arm_externalid": {
            "defaultValue": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Web/connections/arm')]",
            "type": "String"
        },
        "connections_office365_externalid": {
            "defaultValue": "[concat(subscription().id,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Web/connections/office365')]",
            "type": "String"
        }
    },
    "variables": {
        "structuringName": "[concat(parameters('serviceName'),'-ctm-struct-aci')]",
        "gatewayWebAppName": "[concat(parameters('serviceName'),'-gateway-webapp')]",
        "disqualificationWebAppName": "[concat(parameters('serviceName'),'-ctm-disq-webapp')]",
        "sechedulerLogicAppName": "[concat(parameters('serviceName'),'-secheduler-logic-app')]",
        "structurerLogicAppName": "[concat(parameters('serviceName'),'-structurer-logic-app')]",
        "finisherLogicAppName": "[concat(parameters('serviceName'),'-finisher-logic-app')]",
        // Reference to workflow
        "workflows_structurer_logic_app": "[concat(subscription().id,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/', variables('structurerLogicAppName'))]",
        "userName": "[if(parameters('isLiveId'), concat('live.com#', parameters('accountId')), parameters('accountId'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "arm",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[variables('userName')]",
                "customParameterValues": {
                },
                "api": {
                    "id": "[concat(subscription().id,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/arm')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "office365",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[variables('userName')]",
                "customParameterValues": {
                },
                "api": {
                    "id": "[concat(subscription().id,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/office365')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[variables('sechedulerLogicAppName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Logic/workflows', variables('structurerLogicAppName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 1,
                                "schedule": {
                                    "hours": [
                                        "12"
                                    ]
                                }
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "[variables('structurerLogicAppName')]": {
                            "runAfter": {
                            },
                            "type": "Workflow",
                            "inputs": {
                                "headers": {
                                    "content-type": "application/json"
                                },
                                "host": {
                                    "triggerName": "manual",
                                    "workflow": {
                                        "id": "[variables('workflows_structurer_logic_app')]"
                                    }
                                }
                            }
                        }
                    },
                    "outputs": {
                    }
                },
                "parameters": {
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[variables('structurerLogicAppName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections','arm')]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {
                            },
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                }
                            }
                        }
                    },
                    "actions": {
                        "Get_Staging_slot": {
                            "runAfter": {
                                "Initialize_structuring_aci_service_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "method": "GET",
                                "uri": "[concat('https://',variables('gatewayWebAppName'),'.azurewebsites.net/slot')]"
                            }
                        },
                        "Initialize_Structuring_Secondary_Service_variable": {
                            "runAfter": {
                                "Initialize_aciPostfix": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "structuringAciSecondaryService",
                                        "type": "string",
                                        "value": "@{concat(variables('structuringAciService'),variables('aciPostfix'))}"
                                    }
                                ]
                            }
                        },
                        "Initialize_aciPostfix": {
                            "runAfter": {
                                "Parse_Slot_Response": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "aciPostfix",
                                        "type": "string",
                                        "value": "@{if(equals(body('Parse_Slot_Response')?['slot'], 'primary'), '-s', '')}"
                                    }
                                ]
                            }
                        },
                        "Initialize_structuring_aci_service_variable": {
                            "runAfter": {
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "structuringAciService",
                                        "type": "string",
                                        "value": "[variables('structuringName')]"
                                    }
                                ]
                            }
                        },
                        "Parse_Slot_Response": {
                            "runAfter": {
                                "Get_Staging_slot": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Get_Staging_slot')",
                                "schema": {
                                    "properties": {
                                        "slot": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Response_-_200_OK": {
                            "inputs": {
                                "statusCode": 200
                            },
                            "kind": "http",
                            "runAfter": {
                                "Start_structuring_service": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response"
                        },
                        "Start_structuring_service": {
                            "runAfter": {
                                "Stop_structuring_service": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['arm']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "[concat('/subscriptions/@{encodeURIComponent(''',subscription().subscriptionId,''')}/resourcegroups/@{encodeURIComponent(''',resourceGroup().name,''')}/providers/@{encodeURIComponent(''Microsoft.ContainerInstance'')}/@{encodeURIComponent(concat(''containerGroups/'', variables(''structuringAciSecondaryService'')))}/@{encodeURIComponent(''start'')}')]",
                                "queries": {
                                    "x-ms-api-version": "2018-10-01"
                                }
                            }
                        },
                        "Stop_structuring_service": {
                            "runAfter": {
                                "Initialize_Structuring_Secondary_Service_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['arm']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "[concat('/subscriptions/@{encodeURIComponent(''',subscription().subscriptionId,''')}/resourcegroups/@{encodeURIComponent(''',resourceGroup().name,''')}/providers/@{encodeURIComponent(''Microsoft.ContainerInstance'')}/@{encodeURIComponent(concat(''containerGroups/'', variables(''structuringAciSecondaryService'')))}/@{encodeURIComponent(''stop'')}')]",
                                "queries": {
                                    "x-ms-api-version": "2018-10-01"
                                }
                            }
                        }
                    },
                    "outputs": {
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "arm": {
                                "connectionId": "[parameters('connections_arm_externalid')]",
                                "connectionName": "arm",
                                "id": "[concat(subscription().id,'/providers/Microsoft.Web/locations/', resourceGroup().location,'/managedApis/arm')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[variables('finisherLogicAppName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections','arm')]",
                "[resourceId('Microsoft.Web/connections','office365')]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {
                            },
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "AddedTrials": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "BuildVersion": {
                                            "type": "string"
                                        },
                                        "FailedTrials": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "FailureMessage": {
                                            "type": "string"
                                        },
                                        "ProcessedTrials": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "RemovedTrials": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "Success": {
                                            "type": "boolean"
                                        },
                                        "TimePassed": {
                                            "type": "string"
                                        },
                                        "UpdatedTrials": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Get_Staging_slot": {
                            "inputs": {
                                "method": "GET",
                                "uri": "[concat('https://', variables('gatewayWebAppName'),'.azurewebsites.net/slot')]"
                            },
                            "runAfter": {
                                "Initialize_slotSwapBody_variable": [
                                        "Succeeded"
                                ]
                            },
                            "type": "Http"
                        },
                        "Initialize_disqualifierSecondaryService_variable": {
							"inputs": {
                                "variables": [
                                    {
                                        "name": "disqualifierSecondaryService",
                                        "type": "string"
                                    }
                                ]
							},
							"runAfter": {
                                "Initialize_disqualifierService_variable": [
                                    "Succeeded"
                                ]
							},
							"type": "InitializeVariable"
					    },
                        "Initialize_disqualifierService_variable": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "disqualifierService",
                                        "type": "string",
                                        "value": "[variables('disqualificationWebAppName')]"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_structuringSecondaryAci_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_readiness_variable": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "readiness",
                                        "type": "string"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_disqualifierSecondaryService_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_servicePostfix_variable": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "servicePostfix",
                                        "type": "string"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_structuringSummary_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_slotSwapBody_variable": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "slotSwapBody",
                                        "type": "object",
                                        "value": {
                                            "preserveVnet": true,
                                            "targetSlot": "secondary"
                                        }
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_readiness_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_structuringAci_variable": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "structuringAci",
                                        "type": "string",
                                        "value": "[variables('structuringName')]"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_servicePostfix_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_structuringSecondaryAci_variable": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "structuringSecondaryAci",
                                        "type": "string"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_structuringAci_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_structuringSummary_variable": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "structuringSummary",
                                        "type": "object",
                                        "value": {
                                            "added": "@if(equals(triggerBody()?['AddedTrials'], null), 0, length(triggerBody()?['AddedTrials']))",
                                            "buildVersion": "@triggerBody()?['BuildVersion']",
                                            "failed": "@if(equals(triggerBody()?['FailedTrials'], null), 0, length(triggerBody()?['FailedTrials']))",
                                            "failureMessage": "@triggerBody()?['FailureMessage']",
                                            "processed": "@if(equals(triggerBody()?['ProcessedTrials'], null), 0, length(triggerBody()?['ProcessedTrials']))",
                                            "removed": "@if(equals(triggerBody()?['RemovedTrials'], null), 0, length(triggerBody()?['RemovedTrials']))",
                                            "success": "@triggerBody()?['Success']",
                                            "timePassed": "@triggerBody()?['TimePassed']",
                                            "updated": "@if(equals(triggerBody()?['UpdatedTrials'], null), 0, length(triggerBody()?['UpdatedTrials']))"
                                        }
                                    }
                                ]
                            },
                            "runAfter": {
                            },
                            "type": "InitializeVariable"
                        },
                        "Is_structuring_successful": {
                            "actions": {
                                "Is_Service_Ready": {
                                    "actions": {
                                        "Send_a_success_email": {
                                            "inputs": {
                                                "body": {
                                                    "Body": "<p>Processed @{variables('structuringSummary')['processed']} trials.<br>\nFailed @{variables('structuringSummary')['failed']} trials.<br>\nStructuring process time - @{triggerBody()?['TimePassed']}<br>\nStructuring build version - @{triggerBody()?['BuildVersion']}<br>\n</p>",
                                                    "Subject": "[concat('[', parameters('serviceName'), '] ', 'Trials updating process finished successfully')]",
                                                    "To": "[parameters('accountId')]"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/v2/Mail"
                                            },
                                            "runAfter": {
                                                "Swap_gateway_slot": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection"
                                        },
                                        "Swap_gateway_slot": {
                                            "inputs": {
                                                "body": "@variables('slotSwapBody')",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['arm']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "[concat('/subscriptions/@{encodeURIComponent(''',subscription().subscriptionId,''')}/resourcegroups/@{encodeURIComponent(''',resourceGroup().name,''')}/providers/@{encodeURIComponent(''Microsoft.Web'')}/@{encodeURIComponent(''sites/',variables('gatewayWebAppName'),''')}/@{encodeURIComponent(''slotsswap'')}')]",
                                                "queries": {
                                                    "x-ms-api-version": "2019-08-01"
                                                }
                                            },
                                            "runAfter": {},
                                            "type": "ApiConnection"
                                        }
                                    },
                                    "else": {
                                        "actions": {
                                            "Send_a_failure_email_": {
                                                "inputs": {
                                                    "body": {
                                                        "Body": "<p>Failure message - Disqualifier service failed to be ready.<br>\nDisqualifier readiness - @{variables('readiness')}<br>\nStructuring process time - @{triggerBody()?['TimePassed']}<br>\nStructuring build version - @{triggerBody()?['BuildVersion']}<br>\n<br>\nGateway slot not swapped.</p>",
                                                        "Subject": "[concat('[', parameters('serviceName'), '] ', 'Trials updating process failed to complete')]",
                                                        "To": "[parameters('accountId')]"
                                                    },
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['office365']['connectionId']"
                                                        }
                                                    },
                                                    "method": "post",
                                                    "path": "/v2/Mail"
                                                },
                                                "runAfter": {
                                                },
                                                "type": "ApiConnection"
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "startsWith": [
                                                    "@variables('readiness')",
                                                    "Ready"
                                                ]
                                            }
                                        ]
                                    },
                                    "runAfter": {
                                        "Until_disqualifier_is_ready": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Restart_disqualifier_service": {
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['arm']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "[concat('/subscriptions/@{encodeURIComponent(''',subscription().subscriptionId,''')}/resourcegroups/@{encodeURIComponent(''',resourceGroup().name,''')}/providers/@{encodeURIComponent(''Microsoft.Web'')}/@{encodeURIComponent(concat(''sites/'', variables(''disqualifierSecondaryService'')))}/@{encodeURIComponent(''restart'')}')]",
                                        "queries": {
                                            "x-ms-api-version": "2019-08-01"
                                        }
                                    },
                                    "runAfter": {
                                        "Set_disqualifierSecondaryService_variable": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection"
                                },
                                "Set_disqualifierSecondaryService_variable": {
                                    "inputs": {
                                        "name": "disqualifierSecondaryService",
                                        "value": "@{concat(variables('disqualifierService'), variables('servicePostfix'))}"
                                    },
                                    "runAfter": {},
                                    "type": "SetVariable"
                                },
                                "Until_disqualifier_is_ready": {
                                    "actions": {
                                        "Delay_readiness_polling": {
                                            "inputs": {
                                                "interval": {
                                                    "count": 5,
                                                    "unit": "Second"
                                                }
                                            },
                                            "runAfter": {
                                                "Set_readiness_variable": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Wait"
                                        },
                                        "Get_disqualifier_readiness": {
                                            "inputs": {
                                                "method": "GET",
                                                "uri": "@{concat('https://', variables('disqualifierSecondaryService'), '.azurewebsites.net/ready')}"
                                            },
                                            "runAfter": {},
                                            "type": "Http"
                                        },
                                        "Set_readiness_variable": {
                                            "inputs": {
                                                "name": "readiness",
                                                "value": "@{body('Get_disqualifier_readiness')}"
                                            },
                                            "runAfter": {
                                                "Get_disqualifier_readiness": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable"
                                        }
                                    },
                                    "expression": "@startsWith(variables('readiness'), 'Ready')",
                                    "limit": {
                                        "count": 60,
                                        "timeout": "PT1H"
                                    },
                                    "runAfter": {
                                        "Restart_disqualifier_service": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Until"
                                }
                            },
                            "else": {
                                "actions": {
                                    "Send_a_failure_email": {
                                        "inputs": {
                                            "body": {
                                                "Body": "<p>Failure message - @{triggerBody()?['FailureMessage']}<br>\nStructuring process time - @{triggerBody()?['TimePassed']}<br>\nStructuring build version - @{triggerBody()?['BuildVersion']}</p>",
                                                "Subject": "[concat('[', parameters('serviceName'), '] ', 'Trials updating process failed to complete')]",
                                                "To": "[parameters('accountId')]"
                                            },
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['office365']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "path": "/v2/Mail"
                                        },
                                        "runAfter": {
                                        },
                                        "type": "ApiConnection"
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@triggerBody()?['Success']",
                                            true
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "Stop_structuringSecondaryAci": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        },
                        "Parse_Slot_Response": {
                            "inputs": {
                                "content": "@body('Get_Staging_slot')",
                                "schema": {
                                    "properties": {
                                        "slot": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {
                                "Get_Staging_slot": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson"
                        },
                        "Set_servicePostfix": {
                            "inputs": {
                                "name": "servicePostfix",
                                "value": "@{if(equals(body('Parse_Slot_Response')?['slot'], 'primary'), '-s', '')}"
                            },
                            "runAfter": {
                                "Parse_Slot_Response": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable"
                        },
                        "Set_structuringSecondaryAci_variable": {
                            "inputs": {
                                "name": "structuringSecondaryAci",
                                "value": "@{concat(variables('structuringAci'), variables('servicePostfix'))}"
                            },
                            "runAfter": {
                                "Set_servicePostfix": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable"
                        },
                        "Stop_structuringSecondaryAci": {
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['arm']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "[concat('/subscriptions/@{encodeURIComponent(''',subscription().subscriptionId,''')}/resourcegroups/@{encodeURIComponent(''',resourceGroup().name,''')}/providers/@{encodeURIComponent(''Microsoft.ContainerInstance'')}/@{encodeURIComponent(concat(''containerGroups/'', variables(''structuringSecondaryAci'')))}/@{encodeURIComponent(''stop'')}')]",
                                "queries": {
                                    "x-ms-api-version": "2018-10-01"
                                }
                            },
                            "runAfter": {
                                "Set_structuringSecondaryAci_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        }
                    },
                    "outputs": {
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "arm": {
                                "connectionId": "[parameters('connections_arm_externalid')]",
                                "connectionName": "arm",
                                "id": "[concat(subscription().id,'/providers/Microsoft.Web/locations/', resourceGroup().location,'/managedApis/arm')]"
                            },
                            "office365": {
                                "connectionId": "[parameters('connections_office365_externalid')]",
                                "connectionName": "office365",
                                "id": "[concat(subscription().id,'/providers/Microsoft.Web/locations/', resourceGroup().location,'/managedApis/office365')]"
                            }
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "finisherCallbackUrl": {
            "type": "string",
            "value": "[listCallbackURL(concat(resourceId('Microsoft.Logic/workflows/', variables('finisherLogicAppName')), '/triggers/manual'), '2016-06-01').value]"
        }
    }
}