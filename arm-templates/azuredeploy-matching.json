{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "serviceName": {
      "type": "string"
    },
    "env": {
      "type": "string",
      "defaultValue": "dev_us"
    },
    "fhirServerName": {
      "type": "string",
      "defaultValue": "fhirosr4sql"
    },
    "acrServer": {
      "type": "string",
      "defaultValue": "ctmdev.azurecr.io"
    },
    "acrUsername": {
      "type": "string",
      "defaultValue": "ctmdev"
    },
    "acrPassword": {
      "type": "securestring"
    },
    "structuringImageName": {
      "type": "string",
      "defaultValue": "ctmdev.azurecr.io/clinical-trials-structuring"
    },
    "constituencyParserImageName": {
      "type": "string",
      "defaultValue": "ctmdev.azurecr.io/constituency-parser-server"
    },
    "queryEngineImageName": {
      "type": "string",
      "defaultValue": "ctmdev.azurecr.io/query-engine:latest"
    },
    "dynamicCreteriaSelectionImageName": {
      "type": "string",
      "defaultValue": "ctmdev.azurecr.io/dynamic-criterion-selection:latest"
    },
    "disqualificationImageName": {
      "type":"string",
      "defaultValue":"ctmdev.azurecr.io/clinical-trials-disqualification:latest"      
    },
    "ayalonDockerImageName": {
        "type": "string",
        "defaultValue": "ctmdev.azurecr.io/cognitive-services-healthcare:latest"
    },
    "proxyDockerImageName": {
        "type": "string",
        "defaultValue": "ctmdev.azurecr.io/clinical-trials-proxy:latest"
    },
    "servicePrincipalObjectId":{
      "type": "string"
    },
    "servicePrincipleClientId": {
      "type": "string"
    },
    "servicePrincipalClientSecret": {
      "type":"securestring"
    }
  },
  "variables": {
    "proxyApiKey":"[uniqueString(subscription().id)]",
    "fhirServerEndpoint":"[concat('https://',parameters('fhirServerName'),'.azurewebsites.net/')]",
    "insightsName": "[concat(parameters('serviceName'),'-ctm-insights')]",
    "identityName": "[concat(parameters('serviceName'),'-ctm-identity')]",
    "containerGroupName": "[concat(parameters('serviceName'),'-ctm-aci')]",
    "keyVaultName": "[concat(parameters('serviceName'),'-ctm-kv')]",
    "mapsServiceName": "[concat(parameters('serviceName'),'-ctm-map')]",
    "redisCacheName": "[concat(parameters('serviceName'),'-ctm-redis')]",
    "ctmServicePlan": "[concat(parameters('serviceName'),'-ctm-plan')]",
    "ayalonServicePlan": "[concat(parameters('serviceName'),'-ayalon-plan')]",
    "ayalonWebAppName": "[concat(parameters('serviceName'),'-ayalon-webapp')]",
    "queryEngineWebAppName": "[concat(parameters('serviceName'),'-ctm-qe-webapp')]",
    "dynamicCriteriaSelectionWebAppName": "[concat(parameters('serviceName'),'-ctm-dcs-webapp')]",
    "disqualificationWebAppName": "[concat(parameters('serviceName'),'-ctm-disq-webapp')]",
    "textAnalyticsName": "[concat(parameters('serviceName'),'-ctm-ta')]",
    "textAnalyticsCompose": {
          "version": "3.3",
          "services": {
              "ta": {
                  "image": "[parameters('ayalonDockerImageName')]",
                  "environment": {
                      "ApiKey": "${apikey}",
                      "Billing": "[concat('https://',variables('textAnalyticsName'),'.cognitiveservices.azure.com')]",
                      "Eula": "accept"
                  },
                  "ports": [
                      "5000"
                  ]
              },
              "proxy": {
                  "depends_on": [
                      "ta"
                  ],
                  "ports": [
                      "8081:80"
                  ],
                  "image": "[parameters('proxyDockerImageName')]",
                  "environment": {
                      "PROXY_TO": "ta:5000",
                      "KEY_VAULT_URL": "[concat('https://',variables('keyVaultName'),'.vault.azure.net/')]",
                      "AZURE_TENANT_ID": "[subscription().tenantId]",
                      "AZURE_CLIENT_ID": "[parameters('servicePrincipleClientId')]",
                      "AZURE_CLIENT_SECRET": "[parameters('servicePrincipalClientSecret')]",
                      "ALLOWED_PATHS":"/status"
                  }
              }
          }
      },
      "queryEngineCompose": {
          "version": "3.3",
          "services": {
              "qe": {
                  "image": "[parameters('queryEngineImageName')]",
                  "environment": {
                      "key_vault__address": "[concat('https://',variables('keyVaultName'),'.vault.azure.net/')]",
                      "AzureServicesAuthConnectionString":"[concat(
                              'RunAs=App;AppId',parameters('servicePrincipleClientId'),
                              ';TenantId=',subscription().tenantId,
                              ';AppKey=',parameters('servicePrincipalClientSecret'))]"

                  }
              },
              "proxy": {
                  "depends_on": [
                      "qe"
                  ],
                  "ports": [
                      "80:80"
                  ],
                  "image": "[parameters('proxyDockerImageName')]",
                  "environment": {
                      "PROXY_TO": "qe:80",
                      "KEY_VAULT_URL": "[concat('https://',variables('keyVaultName'),'.vault.azure.net/')]",
                      "AZURE_TENANT_ID": "[subscription().tenantId]",
                      "AZURE_CLIENT_ID": "[parameters('servicePrincipleClientId')]",
                      "AZURE_CLIENT_SECRET": "[parameters('servicePrincipalClientSecret')]"
                  }
              }
          }

      },
      "dynamicCriteriaSelectionCompose" : {
          "version": "3.3",
          "services": {
              "dcs": {
                  "image": "[parameters('dynamicCreteriaSelectionImageName')]",
                  "environment": {
                      "key_vault__address": "[concat('https://',variables('keyVaultName'),'.vault.azure.net/')]",
                      "AzureServicesAuthConnectionString":"[concat(
                              'RunAs=App;AppId',parameters('servicePrincipleClientId'),
                              ';TenantId=',subscription().tenantId,
                              ';AppKey=',parameters('servicePrincipalClientSecret'))]"
                  }
              },
              "proxy": {
                  "depends_on": [
                      "dcs"
                  ],
                  "ports": [
                      "80:80"
                  ],
                  "image": "[parameters('proxyDockerImageName')]",
                  "environment": {
                      "PROXY_TO": "dcs:80",
                      "key_vault__address": "[concat('https://',variables('keyVaultName'),'.vault.azure.net/')]",
                      "AZURE_TENANT_ID": "[subscription().tenantId]",
                      "AZURE_CLIENT_ID": "[parameters('servicePrincipleClientId')]",
                      "AZURE_CLIENT_SECRET": "[parameters('servicePrincipalClientSecret')]"
                  }
              }
          }

      },
      "disqualificationCompose":{
          "version": "3.3",
          "services": {
              "disq": {
                  "image": "[parameters('disqualificationImageName')]",
                  "environment": {
                      "key_vault__address": "[concat('https://',variables('keyVaultName'),'.vault.azure.net/')]",
                      "AzureServicesAuthConnectionString":"[concat(
                              'RunAs=App;AppId',parameters('servicePrincipleClientId'),
                              ';TenantId=',subscription().tenantId,
                              ';AppKey=',parameters('servicePrincipalClientSecret'))]"

                  }
              },
              "proxy": {
                  "depends_on": [
                      "disq"
                  ],
                  "ports": [
                      "80:80"
                  ],
                  "image": "[parameters('proxyDockerImageName')]",
                  "environment": {
                      "PROXY_TO": "disq:80",
                      "KEY_VAULT_URL": "[concat('https://',variables('keyVaultName'),'.vault.azure.net/')]",
                      "AZURE_TENANT_ID": "[subscription().tenantId]",
                      "AZURE_CLIENT_ID": "[parameters('servicePrincipleClientId')]",
                      "AZURE_CLIENT_SECRET": "[parameters('servicePrincipalClientSecret')]"
                  }
              }
          }
      }         

  },
  "resources": [
    {
        "type": "microsoft.insights/components",
        "apiVersion": "2015-05-01",
        "name": "[variables('insightsName')]",
        "location": "[resourceGroup().location]",
        "kind": "web",
        "properties": {
            "Application_Type": "web"
        }
    },
    {
        "type": "Microsoft.CognitiveServices/accounts",
        "apiVersion": "2017-04-18",
        "name": "[variables('textAnalyticsName')]",
        "location": "[resourceGroup().location]",
        "sku": {
            "name": "F0"
        },
        "kind": "TextAnalytics",
        "properties": {
            "customSubDomainName": "[variables('textAnalyticsName')]"
        }
    },
    {
        "type": "Microsoft.Web/serverfarms",
        "apiVersion": "2018-02-01",
        "name": "[variables('ayalonServicePlan')]",
        "location": "[resourceGroup().location]",
        "sku": {
            "name": "P3v2",
            "capacity": 1
        },
        "kind": "linux",
        "properties": {
            "perSiteScaling": false,
            "maximumElasticWorkerCount": 1,
            "isSpot": false,
            "reserved": true,
            "isXenon": false,
            "hyperV": false,
            "targetWorkerCount": 0,
            "targetWorkerSizeId": 0
        }
    },    
    {
        "type": "Microsoft.Web/sites",
        "apiVersion": "2018-11-01",
        "name": "[variables('ayalonWebAppName')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Web/serverfarms', variables('ayalonServicePlan'))]",            
            "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
        ],
        "kind": "app,linux,container",
        "properties": {
            "enabled": true,
            "hostNameSslStates": [
                {
                    "name": "[concat(variables('ayalonWebAppName'), '.azurewebsites.net')]",
                    "sslState": "Disabled",
                    "hostType": "Standard"
                },
                {
                    "name": "[concat(variables('ayalonWebAppName'), '.scm.azurewebsites.net')]",
                    "sslState": "Disabled",
                    "hostType": "Repository"
                }
            ],
            "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('ayalonServicePlan'))]",
            "reserved": true,
            "isXenon": false,
            "hyperV": false,
            "scmSiteAlsoStopped": false,
            "clientAffinityEnabled": false,
            "clientCertEnabled": false,
            "hostNamesDisabled": false,
            "containerSize": 0,
            "dailyMemoryTimeQuota": 0,
            "httpsOnly": false,
            "redundancyMode": "None",
            "siteConfig": {
                "appSettings": [
                    {
                        "name": "DOCKER_REGISTRY_SERVER_URL",
                        "value": "[parameters('acrServer')]"
                    },
                    {
                        "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                        "value": "[parameters('acrUsername')]"
                    },
                    {
                        "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                        "value": "[parameters('acrPassword')]"
                    }
                ]
            }
        }
    },
    {
        "type": "Microsoft.Web/sites/config",
        "apiVersion": "2018-11-01",
        "name": "[concat(variables('ayalonWebAppName'), '/web')]",
        "location": "East US",
        "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('ayalonWebAppName'))]",
            "[resourceId('Microsoft.CognitiveServices/accounts', variables('textAnalyticsName'))]"
        ],
        "properties": {
            "numberOfWorkers": 1,
            "defaultDocuments": [
                "Default.htm",
                "Default.html",
                "Default.asp",
                "index.htm",
                "index.html",
                "iisstart.htm",
                "default.aspx",
                "index.php",
                "hostingstart.html"
            ],
            "netFrameworkVersion": "v4.0",
            "linuxFxVersion": "[concat('COMPOSE|',base64(
                        replace(string(variables('textAnalyticsCompose')),'${apikey}',listKeys(variables('textAnalyticsName'), '2017-04-18').key1)
                        ))]",
            "requestTracingEnabled": false,
            "remoteDebuggingEnabled": false,
            "httpLoggingEnabled": false,
            "logsDirectorySizeLimit": 35,
            "detailedErrorLoggingEnabled": false,
            "publishingUsername": "$ctm-bot",
            "scmType": "None",
            "use32BitWorkerProcess": true,
            "webSocketsEnabled": false,
            "alwaysOn": true,
            "managedPipelineMode": "Integrated",
            "virtualApplications": [
                {
                    "virtualPath": "/",
                    "physicalPath": "site\\wwwroot",
                    "preloadEnabled": true
                }
            ],
            "loadBalancing": "LeastRequests",
            "experiments": {
                "rampUpRules": [
                ]
            },
            "autoHealEnabled": false,
            "localMySqlEnabled": false,
            "ipSecurityRestrictions": [
                {
                    "ipAddress": "Any",
                    "action": "Allow",
                    "priority": 1,
                    "name": "Allow all",
                    "description": "Allow all access"
                }
            ],
            "scmIpSecurityRestrictions": [
                {
                    "ipAddress": "Any",
                    "action": "Allow",
                    "priority": 1,
                    "name": "Allow all",
                    "description": "Allow all access"
                }
            ],
            "scmIpSecurityRestrictionsUseMain": false,
            "http20Enabled": false,
            "minTlsVersion": "1.2",
            "ftpsState": "AllAllowed",
            "reservedInstanceCount": 0
        }
    },
    {
        "type": "Microsoft.Web/sites/hostNameBindings",
        "apiVersion": "2018-11-01",
        "name": "[concat(variables('ayalonWebAppName'), '/', variables('ayalonWebAppName'), '.azurewebsites.net')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('ayalonWebAppName'))]"
        ],
        "properties": {
            "siteName": "ctm-bot",
            "hostNameType": "Verified"
        }
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "name": "[variables('identityName')]",
      "apiVersion": "2018-11-30",
      "location": "[resourceGroup().location]",
      "tags": {
        "CTM-Services": "managed identity"
      }
    },
    {
      "name": "[variables('mapsServiceName')]",
      "type": "Microsoft.Maps/accounts",
      "apiVersion": "2018-05-01",
      "location": "global",
      "tags": {
        "CTM-Services": "maps"
      },
      "sku": {
        "name": "S0"
      }
    },
    {
      "type": "Microsoft.Cache/Redis",
      "apiVersion": "2019-07-01",
      "name": "[variables('redisCacheName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "CTM-Services": "redis"
      },
      "properties": {
        "sku": {
          "name": "Standard",
          "family": "C",
          "capacity": 0
        },
        "enableNonSslPort": false,
        "redisConfiguration": {
          "maxclients": "256",
          "maxmemory-reserved": "2",
          "maxfragmentationmemory-reserved": "12",
          "maxmemory-delta": "2"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[variables('keyVaultName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-10-01",
      "tags": {
        "CTM-Services": "KeyVault"
      },
      "dependsOn": [
        "[concat('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('identityName'))]"
      ],
      "properties": {
        "enabledForDeployment": false,
        "enabledForTemplateDeployment": false,
        "enabledForDiskEncryption": false,
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[parameters('servicePrincipalObjectId')]",
            "permissions": {
                "secrets": [
                    "get",
                    "list"
                ]
            }
          }
        ],
        "sku": {
          "name": "Standard",
          "family": "A"
        },
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/azuremaps-key')]",
      "apiVersion": "2016-10-01",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
        "[concat('Microsoft.Maps/accounts/', variables('mapsServiceName'))]"
      ],
      "properties": {
        "value": "[listKeys(variables('mapsServiceName'),'2018-05-01').primaryKey]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/redis-key')]",
      "apiVersion": "2016-10-01",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
        "[concat('Microsoft.Cache/redis/', variables('redisCacheName'))]"
      ],
      "properties": {
        "value": "[listKeys(resourceId('Microsoft.Cache/Redis', variables('redisCacheName')), '2015-08-01').primaryKey]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/proxy-api-key')]",
      "apiVersion": "2016-10-01",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
      ],
      "properties": {
        "value": "[variables('proxyApiKey')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/instrumentation-key')]",
      "apiVersion": "2016-10-01",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
        "[concat('Microsoft.Insights/components/', variables('insightsName'))]"
      ],
      "properties": {
        "value": "[reference(variables('insightsName'), '2015-05-01').instrumentationKey]"
      }
    },
    {
      "name": "[variables('containerGroupName')]",
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2018-10-01",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/',variables('identityName'))]": {
          }
        }
      },
      "tags": {
        "CTM-Services": "containerGroups"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.Maps/accounts', variables('mapsServiceName'))]"
      ],
      "properties": {
        "containers": [
          {
            "name": "structuring",
            "properties": {
              "image": "[parameters('structuringImageName')]",
              "command": [
                "dotnet",
                "ClinicalTrialsStructuring.dll",
                "download",
                "bootstrap"
              ],
              "environmentVariables": [
                {
                  "name": "ASPNETCORE_ENVIRONMENT",
                  "value": "[parameters('env')]"
                },
                {
                  "name": "key_vault__address",
                  "value": "[concat('https://', variables('keyVaultName'), '.vault.azure.net/')]"
                },
                {
                  "name": "azure_maps__api_key",
                  "value": "[listKeys(variables('mapsServiceName'),'2018-05-01').primaryKey]"
                },
                {
                  "name": "fhir__endpoint",
                  "value": "[variables('fhirServerEndpoint')]"
                },
                {
                  "name": "ayalon__address",
                  "value": "[concat('https://',variables('ayalonWebAppName'),'.azurewebsites.net','text/analytics/v3.0-preview.1/domains/health') ]"
                },
                {
                  "name": "redis__key",
                  "value": "[listKeys(resourceId('Microsoft.Cache/Redis', variables('redisCacheName')), '2015-08-01').primaryKey]"
                },
                {
                  "name": "AzureServicesAuthConnectionString",
                  "value": "[concat(
                             'RunAs=App;AppId',parameters('servicePrincipleClientId'),
                             ';TenantId=',subscription().tenantId,
                             ';AppKey=',parameters('servicePrincipalClientSecret'))]"

                }
              ],
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memoryInGB": 1.5
                }
              }
            }
          },
          {
            "name": "constituency-parser",
            "properties": {
              "image": "[parameters('constituencyParserImageName')]",
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memoryInGB": 4
                }
              }
            }
          }
        ],
        "imageRegistryCredentials": [
          {
            "server": "[parameters('acrServer')]",
            "username": "[parameters('acrUsername')]",
            "password": "[parameters('acrPassword')]"
          }
        ],
        "restartPolicy": "OnFailure",
        "osType": "Linux"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('ctmServicePlan')]",
      "location": "[resourceGroup().location]",
      "sku": {
          "name": "P2v2",
          "capacity": 1
      },
      "kind": "linux",
      "tags": {
        "CTM-Services": "web app plan"
      },
      "properties": {
        "perSiteScaling": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": true,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[variables('queryEngineWebAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "app,linux,container",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/',variables('identityName'))]": {
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('identityName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('ctmServicePlan'))]"      
      ],
      "tags": {
        "CTM-Services": "query engine"
      },
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('queryEngineWebAppName'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('queryEngineWebAppName'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[variables('ctmServicePlan')]",
        "reserved": true,
        "isXenon": false,
        "hyperV": false,
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None",
        "siteConfig": {
          "appSettings": [
            {
              "name": "DOCKER_REGISTRY_SERVER_URL",
              "value": "[parameters('acrServer')]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_USERNAME",
              "value": "[parameters('acrUsername')]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
              "value": "[parameters('acrPassword')]"
            },
            {
              "name": "ASPNETCORE_ENVIRONMENT",
              "value": "[parameters('env')]"
            },
            {
              "name": "DOCKER_ENABLE_CI",
              "value": "true"
            },
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('queryEngineWebAppName'), '/web')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('queryEngineWebAppName'))]"
      ],
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php",
          "hostingstart.html"
        ],
        "netFrameworkVersion": "v4.0",
        "linuxFxVersion": "[concat('COMPOSE|',base64(string(variables('queryEngineCompose'))))]",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "remoteDebuggingVersion": "VS2019",
        "httpLoggingEnabled": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "$ctm-query-engine-webapp-eastus-dev",
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": true,
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": true
          }
        ],
        "loadBalancing": "LeastRequests",
        "experiments": {
          "rampUpRules": [
          ]
        },
        "autoHealEnabled": false,
        "localMySqlEnabled": false,
        "ipSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "ftpsState": "AllAllowed",
        "reservedInstanceCount": 0
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('queryEngineWebAppName'), '/', variables('queryEngineWebAppName'), '.azurewebsites.net')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('queryEngineWebAppName'))]"
      ],
      "properties": {
        "siteName": "[variables('queryEngineWebAppName')]",
        "hostNameType": "Verified"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[variables('dynamicCriteriaSelectionWebAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "app,linux,container",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('ctmServicePlan'))]",
        "[concat('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('identityName'))]"
      ],
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/',variables('identityName'))]":{}
        }
      },
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('dynamicCriteriaSelectionWebAppName'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('dynamicCriteriaSelectionWebAppName'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[variables('ctmServicePlan')]",
        "reserved": true,
        "isXenon": false,
        "hyperV": false,
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None",
        "siteConfig": {
          "appSettings": [
            {
              "name": "DOCKER_REGISTRY_SERVER_URL",
              "value": "[parameters('acrServer')]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_USERNAME",
              "value": "[parameters('acrUsername')]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
              "value": "[parameters('acrPassword')]"
            },
            {
              "name": "ASPNETCORE_ENVIRONMENT",
              "value": "[parameters('env')]"
            },
            {
              "name": "DOCKER_ENABLE_CI",
              "value": "true"
            },
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('dynamicCriteriaSelectionWebAppName'), '/web')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('dynamicCriteriaSelectionWebAppName'))]"
      ],
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php",
          "hostingstart.html"
        ],
        "netFrameworkVersion": "v4.0",
        "linuxFxVersion": "[concat('COMPOSE|',base64(string(variables('dynamicCriteriaSelectionCompose'))))]",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "remoteDebuggingVersion": "VS2019",
        "httpLoggingEnabled": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "$ctm-dynamic-criterion-selection-webapp-eastus-dev",
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": true,
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": true
          }
        ],
        "loadBalancing": "LeastRequests",
        "experiments": {
          "rampUpRules": [
          ]
        },
        "autoHealEnabled": false,
        "localMySqlEnabled": false,
        "ipSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "ftpsState": "AllAllowed",
        "reservedInstanceCount": 0
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('dynamicCriteriaSelectionWebAppName'), '/', variables('dynamicCriteriaSelectionWebAppName'), '.azurewebsites.net')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('dynamicCriteriaSelectionWebAppName'))]"
      ],
      "properties": {
        "siteName": "ctm-dynamic-criterion-selection-webapp-eastus-dev",
        "hostNameType": "Verified"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[variables('disqualificationWebAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "app,linux,container",
      "dependsOn":[
        "[resourceId('Microsoft.Web/serverfarms', variables('ctmServicePlan'))]",
        "[concat('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('identityName'))]"
      ],
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('disqualificationWebAppName'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('disqualificationWebAppName'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[variables('ctmServicePlan')]",
        "reserved": true,
        "isXenon": false,
        "hyperV": false,
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None",
        "siteConfig": {
          "appSettings": [
            {
              "name": "DOCKER_REGISTRY_SERVER_URL",
              "value": "[parameters('acrServer')]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_USERNAME",
              "value": "[parameters('acrUsername')]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
              "value": "[parameters('acrPassword')]"
            },
            {
              "name": "ASPNETCORE_ENVIRONMENT",
              "value": "[parameters('env')]"
            },
            {
              "name": "DOCKER_ENABLE_CI",
              "value": "true"
            },
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('disqualificationWebAppName'), '/web')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('disqualificationWebAppName'))]"
      ],
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/',variables('identityName'))]":{}
        }
      },
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php",
          "hostingstart.html"
        ],
        "netFrameworkVersion": "v4.0",
        "linuxFxVersion": "[concat('COMPOSE|', base64(string(variables('disqualificationCompose'))))]",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "remoteDebuggingVersion": "VS2019",
        "httpLoggingEnabled": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "$ctm-clinical-trials-disqualification-webapp-eastus-dev",
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": true,
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": true
          }
        ],
        "loadBalancing": "LeastRequests",
        "experiments": {
          "rampUpRules": [
          ]
        },
        "autoHealEnabled": false,
        "localMySqlEnabled": false,
        "ipSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "ftpsState": "AllAllowed",
        "reservedInstanceCount": 0
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('disqualificationWebAppName'), '/', variables('disqualificationWebAppName'), '.azurewebsites.net')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('disqualificationWebAppName'))]"
      ],
      "properties": {
        "siteName": "ctm-clinical-trials-disqualification-webapp-eastus-dev",
        "hostNameType": "Verified"
      }
    }
  ],
  "outputs":{
    "proxyApiKey": {
      "type":"string",
      "value":"[variables('proxyApiKey')]"
    },
    "queryEngineEndpoint": {
      "type":"string",
      "value":"[concat('https://', variables('queryEngineWebAppName'),'.azurewebsites.net')]"
    },
    "dynamicCriteriaSelectionEndpoint": {
      "type":"string",
      "value":"[concat('https://', variables('dynamicCriteriaSelectionWebAppName'),'.azurewebsites.net')]"
    },
    "disqualificationEndpoint": {
      "type":"string",
      "value":"[concat('https://', variables('disqualificationWebAppName'),'.azurewebsites.net')]"
    }
  }
}
